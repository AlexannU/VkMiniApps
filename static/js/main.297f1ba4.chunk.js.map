{"version":3,"sources":["panels/Home.js","panels/Test.js","panels/Result.js","App.js","index.js"],"names":["a","axios","get","response","console","log","data","Home","id","go","fetchedUser","isNewUser","first_name","title","size","level","onClick","getSomeInfo","osName","platform","Test","props","TestResult","questions","map","el","index","key","className","name","value","onChange","left","IOS","mode","e","preventDefault","res","user","result","post","VkApiUser","Result","sum","i","length","resultat","Math","round","sendPostOnServe","statusUser","header","TResult","App","useState","activePanel","setActivePanel","setUser","setDBUser","popout","setPopout","useEffect","bridge","send","subscribe","detail","type","schemeAttribute","document","createAttribute","scheme","body","attributes","setNamedItem","fetchData","saveUser","usr","save","sv","ReactDOM","render","getElementById"],"mappings":"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","file":"static/js/main.297f1ba4.chunk.js","sourcesContent":["import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport axios from \"axios\";\nimport {\n  Div,\n  Group,\n  Button,\n  PanelHeader,\n  Panel,\n  Header,\n} from \"@vkontakte/vkui\";\nasync function getSomeInfo() {\n  const response = await axios.get(\"http://localhost:5000/api/find\");\n  console.log(response.data);\n}\nfunction Home({ id, go, fetchedUser, isNewUser }) {\n  if (isNewUser) {\n    return (\n      <Panel id={id}>\n        <PanelHeader>Проверь свои навыки</PanelHeader>\n        {fetchedUser && (\n          <Header>Добро пожаловать, {`${fetchedUser.first_name}`}!</Header>\n        )}\n        <Group title=\"Navigation Example\">\n          <Div>\n            <Button size=\"xl\" level=\"2\" onClick={() => go(\"test\")}>\n              Ну даввай давай\n            </Button>\n          </Div>\n          <Div>\n            <Button size=\"xl\" level=\"2\" onClick={() => getSomeInfo()}>\n              получаем данные\n            </Button>\n          </Div>\n        </Group>\n      </Panel>\n    );\n  }\n  return (\n    <Panel id={id}>\n      <PanelHeader>Проверь свои навыки</PanelHeader>\n      <Header>ТАК ТАК ТАК, тебе уже хватит</Header>\n    </Panel>\n  );\n}\n\nHome.propTypes = {\n  id: PropTypes.string.isRequired,\n  go: PropTypes.func.isRequired,\n  fetchedUser: PropTypes.object.isRequired,\n  isNewUser: PropTypes.bool.isRequired,\n};\n\nexport default Home;\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport {\n  platform,\n  IOS,\n  PanelHeader,\n  Panel,\n  PanelHeaderButton,\n  Radio,\n  Div,\n  Button,\n} from \"@vkontakte/vkui\";\nimport Icon28ChevronBack from \"@vkontakte/icons/dist/28/chevron_back\";\nimport Icon24Back from \"@vkontakte/icons/dist/24/back\";\n\nimport \"./Radio.css\";\n\nconst osName = platform();\n\nfunction Test(props) {\n  let TestResult = [];\n  let questions = props.questions;\n  questions = questions.map((el, index) => {\n    return (\n      <Div key={index}>\n        <Div>{el}</Div>\n        <form>\n          <div>\n            <Radio\n              className=\"form_radio_btn\"\n              name=\"radio\"\n              value=\"1\"\n              onChange={() => (TestResult[index] = 1)}\n            >\n              1\n            </Radio>\n            <Radio\n              className=\"form_radio_btn\"\n              name=\"radio\"\n              value=\"2\"\n              onChange={() => (TestResult[index] = 2)}\n            >\n              2\n            </Radio>\n            <Radio\n              className=\"form_radio_btn\"\n              name=\"radio\"\n              value=\"5\"\n              onChange={() => (TestResult[index] = 3)}\n            >\n              3\n            </Radio>\n            <Radio\n              className=\"form_radio_btn\"\n              name=\"radio\"\n              value=\"4\"\n              onChange={() => (TestResult[index] = 4)}\n            >\n              4\n            </Radio>\n            <Radio\n              className=\"form_radio_btn\"\n              name=\"radio\"\n              value=\"5\"\n              onChange={() => (TestResult[index] = 5)}\n            >\n              5\n            </Radio>\n          </div>\n        </form>\n      </Div>\n    );\n  });\n  return (\n    <Panel id={props.id}>\n      <PanelHeader\n        left={\n          <PanelHeaderButton onClick={() => props.go(\"home\")}>\n            {osName === IOS ? <Icon28ChevronBack /> : <Icon24Back />}\n          </PanelHeaderButton>\n        }\n      >\n        Тест\n      </PanelHeader>\n      {questions}\n\n      <Div>\n        <Button\n          size=\"xl\"\n          mode=\"commerce\"\n          onClick={(e) => {\n            e.preventDefault();\n            props.res(TestResult);\n            props.go(\"result\");\n          }}\n        >\n          Отправить результат\n        </Button>\n      </Div>\n    </Panel>\n  );\n}\n\nTest.propTypes = {\n  id: PropTypes.string.isRequired,\n  go: PropTypes.func.isRequired,\n  questions: PropTypes.array.isRequired,\n};\n\nexport default Test;\n","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport axios from \"axios\";\r\n\r\nimport {\r\n  Div,\r\n  Panel,\r\n  PanelHeader,\r\n  Button,\r\n  Group,\r\n  InfoRow,\r\n  Progress,\r\n} from \"@vkontakte/vkui\";\r\n\r\nconst usssss = { name: \"lox\", email: \"loxpela\" };\r\nasync function sendPostOnServe(user, result) {\r\n  const res = await axios.post(\"http://localhost:5000/api/save\", {\r\n    VkApiUser: user,\r\n    TestResult: result,\r\n  });\r\n  console.log(res.data);\r\n}\r\n\r\nfunction Result(props) {\r\n  let sum = 0;\r\n  for (let i = 0; i < props.res.length; i++) {\r\n    sum += props.res[i];\r\n  }\r\n  let resultat = Math.round((sum / props.res.length / 5) * 100);\r\n  sendPostOnServe(props.fetchedUser, resultat);\r\n  return (\r\n    <Panel id={props.id}>\r\n      <PanelHeader>Тест</PanelHeader>\r\n      <Div>\r\n        <Button\r\n          size=\"xl\"\r\n          level=\"2\"\r\n          onClick={() => {\r\n            props.go(\"home\");\r\n            props.statusUser();\r\n          }}\r\n        >\r\n          Home\r\n        </Button>\r\n      </Div>\r\n      <Div>Поздрввляю, ты завалил тест без вариантов ответа</Div>\r\n      <Div>Твой результат {resultat}</Div>\r\n      <Group>\r\n        <Div>\r\n          <InfoRow header=\"Ваши умения в этой сфере\">\r\n            <Progress value={resultat} />\r\n          </InfoRow>\r\n        </Div>\r\n      </Group>\r\n    </Panel>\r\n  );\r\n}\r\nResult.propTypes = {\r\n  id: PropTypes.string.isRequired,\r\n  go: PropTypes.func.isRequired,\r\n};\r\nexport default Result;\r\n","import React, { useState, useEffect } from \"react\";\nimport bridge from \"@vkontakte/vk-bridge\";\nimport View from \"@vkontakte/vkui/dist/components/View/View\";\nimport ScreenSpinner from \"@vkontakte/vkui/dist/components/ScreenSpinner/ScreenSpinner\";\nimport \"@vkontakte/vkui/dist/vkui.css\";\nimport axios from \"axios\";\nimport Home from \"./panels/Home\";\nimport Test from \"./panels/Test\";\nimport Result from \"./panels/Result\";\n\nconst TResult = [];\nconst questions = [\n  \"грамотная устная и письменная речь\",\n  \"эмоциональный интеллект\",\n  \"готовность работать в команде\",\n  \"принятие критики\",\n  \"способность сопереживать\",\n  \"деловая этика\",\n  \"толерантность\",\n  \"умение слушать\",\n  \"убеждение и аргументация\",\n  \"нетворкинг: построение и поддержание бизнес-отношений\",\n  \"ведение переговоров\",\n  \"проведение презентаций\",\n  \"базовые навыки продаж\",\n  \"самопрезентация\",\n  \"публичные выступления\",\n  \"нацеленность на результат\",\n  \"деловое письмо\",\n  \"клиентоориентированность\",\n];\n\nlet isNewUser = true;\nasync function getSomeInfo() {\n  const response = await axios.get(\"http://localhost:5000/api/find\");\n  console.log(response.data);\n  return response;\n}\nconst App = () => {\n  const [activePanel, setActivePanel] = useState(\"home\");\n  const [fetchedUser, setUser] = useState(null);\n  const [DBUser, setDBUser] = useState(null);\n  const [popout, setPopout] = useState(<ScreenSpinner size=\"large\" />);\n  useEffect(() => {\n    bridge.subscribe(({ detail: { type, data } }) => {\n      if (type === \"VKWebAppUpdateConfig\") {\n        const schemeAttribute = document.createAttribute(\"scheme\");\n        schemeAttribute.value = data.scheme ? data.scheme : \"client_light\";\n        document.body.attributes.setNamedItem(schemeAttribute);\n      }\n    });\n    async function fetchData() {\n      const user = await bridge.send(\"VKWebAppGetUserInfo\");\n      setUser(user);\n      setDBUser(getSomeInfo());\n      setPopout(null);\n    }\n    fetchData();\n  }, []);\n\n  const go = (e) => {\n    setActivePanel(e);\n  };\n  const res = (e) => {\n    for (let i = 0; i < e.length; i++) {\n      TResult[i] = e[i];\n    }\n    console.log(TResult);\n  };\n  function changeStatusUser() {\n    isNewUser = false;\n  }\n  function saveUser(usr) {\n    async function sv() {\n      try {\n        await usr.save();\n      } catch (err) {\n        console.log(err);\n      }\n    }\n    sv();\n  }\n  return (\n    <View activePanel={activePanel} popout={popout}>\n      <Home id=\"home\" go={go} fetchedUser={fetchedUser} isNewUser={isNewUser} />\n      <Test\n        id=\"test\"\n        go={go}\n        questions={questions}\n        res={res}\n        fetchedUser={fetchedUser}\n      />\n      <Result\n        id=\"result\"\n        go={go}\n        res={TResult}\n        statusUser={changeStatusUser}\n        saveUser={saveUser}\n        fetchedUser={fetchedUser}\n      />\n    </View>\n  );\n};\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport bridge from \"@vkontakte/vk-bridge\";\nimport App from \"./App\";\n\n\nbridge.send(\"VKWebAppInit\");\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n\n"],"sourceRoot":""}