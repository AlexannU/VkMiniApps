{"version":3,"sources":["panels/Home.js","panels/Test.js","panels/Result.js","App.js","index.js"],"names":["Home","id","go","fetchedUser","first_name","title","size","level","onClick","osName","platform","Persik","props","TestResult","questions","map","el","index","key","className","name","value","onChange","style","textAlign","left","IOS","mode","e","preventDefault","res","Result","console","log","sum","i","length","resultat","Math","round","header","TResult","App","useState","activePanel","setActivePanel","setUser","popout","setPopout","useEffect","a","bridge","send","user","subscribe","detail","type","data","schemeAttribute","document","createAttribute","scheme","body","attributes","setNamedItem","fetchData","ReactDOM","render","getElementById"],"mappings":"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","file":"static/js/main.88d9ac07.chunk.js","sourcesContent":["import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport {\n  Div,\n  Group,\n  Button,\n  PanelHeader,\n  Panel,\n  Header,\n} from \"@vkontakte/vkui\";\n\nfunction Home({ id, go, fetchedUser }) {\n  return (\n    <Panel id={id}>\n      <PanelHeader>Проверь свои навыки</PanelHeader>\n      {fetchedUser && (\n        <Header>Добро пожаловать, {`${fetchedUser.first_name}`}!</Header>\n      )}\n      <Group title=\"Navigation Example\">\n        <Div>\n          <Button size=\"xl\" level=\"2\" onClick={() => go(\"persik\")}>\n            Ну даввай давай\n          </Button>\n        </Div>\n      </Group>\n    </Panel>\n  );\n}\n\nHome.propTypes = {\n  id: PropTypes.string.isRequired,\n  go: PropTypes.func.isRequired,\n  fetchedUser: PropTypes.object.isRequired,\n};\n\nexport default Home;\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport {\n  platform,\n  IOS,\n  PanelHeader,\n  Panel,\n  PanelHeaderButton,\n  Radio,\n  Div,\n  Button,\n} from \"@vkontakte/vkui\";\nimport Icon28ChevronBack from \"@vkontakte/icons/dist/28/chevron_back\";\nimport Icon24Back from \"@vkontakte/icons/dist/24/back\";\n\nimport \"./Radio.css\";\n\nconst osName = platform();\nfunction Persik(props) {\n  let TestResult = [];\n  let questions = props.questions;\n  questions = questions.map((el, index) => {\n    return (\n      <Div key={index}>\n        <Div>{el}</Div>\n        <form>\n          <Radio\n            className=\"form_radio_btn\"\n            name=\"radio\"\n            value=\"1\"\n            onChange={() => (TestResult[index] = 1)}\n          >\n            1\n          </Radio>\n          <Radio\n            className=\"form_radio_btn\"\n            name=\"radio\"\n            value=\"2\"\n            onChange={() => (TestResult[index] = 2)}\n          >\n            2\n          </Radio>\n          <Radio\n            className=\"form_radio_btn\"\n            name=\"radio\"\n            value=\"5\"\n            onChange={() => (TestResult[index] = 3)}\n          >\n            3\n          </Radio>\n          <Radio\n            className=\"form_radio_btn\"\n            name=\"radio\"\n            value=\"4\"\n            onChange={() => (TestResult[index] = 4)}\n          >\n            4\n          </Radio>\n          <Radio\n            className=\"form_radio_btn\"\n            name=\"radio\"\n            value=\"5\"\n            onChange={() => (TestResult[index] = 5)}\n          >\n            5\n          </Radio>\n        </form>\n      </Div>\n    );\n  });\n  return (\n    <Panel id={props.id} style={{ textAlign: \"center\" }}>\n      <PanelHeader\n        left={\n          <PanelHeaderButton onClick={() => props.go(\"home\")}>\n            {osName === IOS ? <Icon28ChevronBack /> : <Icon24Back />}\n          </PanelHeaderButton>\n        }\n      >\n        Тест\n      </PanelHeader>\n      {questions}\n\n      <Div>\n        <Button\n          size=\"xl\"\n          mode=\"commerce\"\n          onClick={(e) => {\n            e.preventDefault();\n            props.res(TestResult);\n            props.go(\"result\");\n          }}\n        >\n          Отправить результат\n        </Button>\n      </Div>\n    </Panel>\n  );\n}\n\nPersik.propTypes = {\n  id: PropTypes.string.isRequired,\n  go: PropTypes.func.isRequired,\n  questions: PropTypes.array.isRequired,\n};\n\nexport default Persik;\n","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport {\r\n  Div,\r\n  Panel,\r\n  PanelHeader,\r\n  Button,\r\n  Group,\r\n  InfoRow,\r\n  Progress,\r\n} from \"@vkontakte/vkui\";\r\n\r\nfunction Result(props) {\r\n  console.log(props);\r\n  let sum = 0;\r\n  for (let i = 0; i < props.res.length; i++) {\r\n    sum += props.res[i];\r\n  }\r\n  let resultat = Math.round((sum / props.res.length / 5) * 100);\r\n  return (\r\n    <Panel id={props.id}>\r\n      <PanelHeader>Тест</PanelHeader>\r\n      <Div>\r\n        <Button size=\"xl\" level=\"2\" onClick={() => props.go(\"home\")}>\r\n          Home\r\n        </Button>\r\n      </Div>\r\n      <Div>Поздрввляю, ты завалил тест без вариантов ответа</Div>\r\n      <Div>Твой результат {resultat}</Div>\r\n      <Group>\r\n        <Div>\r\n          <InfoRow header=\"Ваши умения в этой сфере\">\r\n            <Progress value={resultat} />\r\n          </InfoRow>\r\n        </Div>\r\n      </Group>\r\n    </Panel>\r\n  );\r\n}\r\nResult.propTypes = {\r\n  id: PropTypes.string.isRequired,\r\n  go: PropTypes.func.isRequired,\r\n};\r\nexport default Result;\r\n","import React, { useState, useEffect } from \"react\";\nimport bridge from \"@vkontakte/vk-bridge\";\nimport View from \"@vkontakte/vkui/dist/components/View/View\";\nimport ScreenSpinner from \"@vkontakte/vkui/dist/components/ScreenSpinner/ScreenSpinner\";\nimport \"@vkontakte/vkui/dist/vkui.css\";\n\nimport Home from \"./panels/Home\";\nimport Persik from \"./panels/Test\";\nimport Result from \"./panels/Result\";\nconst TResult = [];\nconst questions = [\n  \"грамотная устная и письменная речь\",\n  \"эмоциональный интеллект\",\n  \"готовность работать в команде\",\n  \"принятие критики\",\n  \"способность сопереживать\",\n  \"деловая этика\",\n  \"толерантность\",\n  \"умение слушать\",\n  \"убеждение и аргументация\",\n  \"нетворкинг: построение и поддержание бизнес-отношений\",\n  \"ведение переговоров\",\n  \"проведение презентаций\",\n  \"базовые навыки продаж\",\n  \"самопрезентация\",\n  \"публичные выступления\",\n  \"нацеленность на результат\",\n  \"деловое письмо\",\n  \"клиентоориентированность\",\n];\nconst App = () => {\n  const [activePanel, setActivePanel] = useState(\"home\");\n  const [fetchedUser, setUser] = useState(null);\n  const [popout, setPopout] = useState(<ScreenSpinner size=\"large\" />);\n  useEffect(() => {\n    bridge.subscribe(({ detail: { type, data } }) => {\n      if (type === \"VKWebAppUpdateConfig\") {\n        const schemeAttribute = document.createAttribute(\"scheme\");\n        schemeAttribute.value = data.scheme ? data.scheme : \"client_light\";\n        document.body.attributes.setNamedItem(schemeAttribute);\n      }\n    });\n    async function fetchData() {\n      const user = await bridge.send(\"VKWebAppGetUserInfo\");\n      setUser(user);\n      setPopout(null);\n    }\n    fetchData();\n  }, []);\n\n  const go = (e) => {\n    setActivePanel(e);\n  };\n  const res = (e) => {\n    for (let i = 0; i < e.length; i++) {\n      TResult[i] = e[i];\n    }\n    console.log(TResult);\n  };\n\n  return (\n    <View activePanel={activePanel}>\n      <Home id=\"home\" go={go} fetchedUser={fetchedUser} popout={popout} />\n      <Persik id=\"persik\" go={go} questions={questions} res={res} />\n      <Result id=\"result\" go={go} res={TResult} />\n    </View>\n  );\n};\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport bridge from \"@vkontakte/vk-bridge\";\nimport App from \"./App\";\n\n\nbridge.send(\"VKWebAppInit\");\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n\n"],"sourceRoot":""}